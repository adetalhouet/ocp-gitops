---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metal-provisioner
  namespace: metal-provisioner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: baremetalhost-role
  namespace: metal-provisioner
rules:
- apiGroups:
  - coordination.k8s.io
  resources: 
  - '*'
  verbs:
  - '*'
- apiGroups:
  - metal3.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: baremetalhost-rolebinding
  namespace: metal-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: baremetalhost-role
subjects:
- kind: ServiceAccount
  name: metal-provisioner
  namespace: metal-provisioner
---
kind: Secret
apiVersion: v1
metadata:
  name: ironic-credentials
  namespace: metal-provisioner
data:
  password: Ym9iCg==
  username: Ym9iCg==
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: ironic-inspector-credentials
  namespace: metal-provisioner
data:
  password: Ym9iCg==
  username: Ym9iCg==
type: Opaque
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: baremetal-operator-ironic
  namespace: metal-provisioner
data:
  DEPLOY_KERNEL_URL: 'http://ironic.metal-provisioner:6180/images/ironic-python-agent.kernel'
  DEPLOY_RAMDISK_URL: 'http://ironic.metal-provisioner:6180/images/ironic-python-agent.initramfs'
  DHCP_RANGE: '172.22.0.10,172.22.0.100' # that param doesn't matter
  HTTP_PORT: '6180'
  IRONIC_ENDPOINT: 'http://ironic.metal-provisioner:6385/v1/'
  IRONIC_FAST_TRACK: 'true'
  IRONIC_INSPECTOR_ENDPOINT: 'http://ironic.metal-provisioner:5050/v1/'
  PROVISIONING_INTERFACE: eth2 # that param doesn't matter
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: baremetal-operator-controller-manager
  namespace: metal-provisioner
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      volumes:
        - name: ironic-credentials
          secret:
            secretName: ironic-credentials
            defaultMode: 420
        - name: ironic-inspector-credentials
          secret:
            secretName: ironic-inspector-credentials
            defaultMode: 420
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: manager
          command:
            - /baremetal-operator
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9440
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          imagePullPolicy: Always
          volumeMounts:
            - name: ironic-credentials
              readOnly: true
              mountPath: /opt/metal3/auth/ironic
            - name: ironic-inspector-credentials
              readOnly: true
              mountPath: /opt/metal3/auth/ironic-inspector
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: baremetal-operator-ironic
          image: quay.io/metal3-io/baremetal-operator
          args:
            - '--metrics-addr=127.0.0.1:8085'
            - '--enable-leader-election'
        - name: kube-rbac-proxy
          image: 'gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0'
          args:
            - '--secure-listen-address=0.0.0.0:8443'
            - '--upstream=http://127.0.0.1:8085/'
            - '--logtostderr=true'
            - '--v=10'
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      serviceAccount: metal-provisioner
      serviceAccountName: metal-provisioner
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600