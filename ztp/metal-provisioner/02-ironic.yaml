---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: ironic-scc
 namespace: metal-provisioner
rules:
 - apiGroups: ["security.openshift.io"]
   resources: ["securitycontextconstraints"]
   resourceNames: ["privileged"]
   verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ironic-rolebinding
  namespace: metal-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ironic-scc
subjects:
- kind: ServiceAccount
  name: metal-provisioner
  namespace: metal-provisioner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capm3-ironic
  namespace: metal-provisioner
spec:
  replicas: 1
  strategy:
    # We cannot run Ironic with more than one replica at a time. The recreate
    # strategy makes sure that the old pod is gone before a new is started.
    type: Recreate
  selector:
    matchLabels:
      name: capm3-ironic
  template:
    metadata:
      labels:
        name: capm3-ironic
    spec:
      hostNetwork: true
      containers:
        - name: ironic-dnsmasq
          image: quay.io/metal3-io/ironic
          imagePullPolicy: Always
          securityContext:
             capabilities:
               add: ["NET_ADMIN"]
          command:
            - /bin/rundnsmasq
          volumeMounts:
            - mountPath: /shared
              name: ironic-data-volume
          envFrom:
            - configMapRef:
                name: ironic-bmo-configmap
        - name: mariadb
          image: quay.io/metal3-io/ironic
          imagePullPolicy: Always
          command:
            - /bin/runmariadb
          volumeMounts:
            - mountPath: /shared
              name: ironic-data-volume
          env:
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-password
                  key: password
            - name: RESTART_CONTAINER_CERTIFICATE_UPDATED
              valueFrom:
                 configMapKeyRef:
                  name: ironic-bmo-configmap
                  key: RESTART_CONTAINER_CERTIFICATE_UPDATED
        - name: ironic-api
          image: quay.io/metal3-io/ironic
          imagePullPolicy: Always
          command:
            - /bin/bash
            - '-c'
            - >
              sed -i "s/{{ env.IRONIC_URL_HOST }}:{{ env.HTTP_PORT }}/{{ env.IRONIC_HTTP_URL }}/g" /etc/ironic/ironic.conf.j2

              sed -i "s/host = {{ env.IRONIC_URL_HOST }}/host = {{ env.IRONIC_HTTP_URL }}/g" /etc/ironic/ironic.conf.j2

              /bin/runironic-api
          volumeMounts:
            - mountPath: /shared
              name: ironic-data-volume
          envFrom:
            - configMapRef:
                name: ironic-bmo-configmap
          env:
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-password
                  key: password
          ports:
            - containerPort: 6180 # HTTPD service
            - containerPort: 6385 # Ironic API
        - name: ironic-conductor
          image: quay.io/metal3-io/ironic
          imagePullPolicy: Always
          command:
            - /bin/bash
            - '-c'
            - >
              sed -i "s/{{ env.IRONIC_URL_HOST }}:{{ env.HTTP_PORT }}/{{ env.IRONIC_HTTP_URL }}/g" /etc/ironic/ironic.conf.j2

              sed -i "s/host = {{ env.IRONIC_URL_HOST }}/host = {{ env.IRONIC_HTTP_URL }}/g" /etc/ironic/ironic.conf.j2

              /bin/runironic-conductor
          volumeMounts:
            - mountPath: /shared
              name: ironic-data-volume
          envFrom:
            - configMapRef:
                name: ironic-bmo-configmap
          env:
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-password
                  key: password
        - name: ironic-inspector
          image: quay.io/metal3-io/ironic
          imagePullPolicy: Always
          command:
            - /bin/runironic-inspector
          envFrom:
            - configMapRef:
                name: ironic-bmo-configmap
          ports:
            - containerPort: 5050
      initContainers:
        - name: ironic-ipa-downloader
          image: quay.io/metal3-io/ironic-ipa-downloader
          imagePullPolicy: Always
          command:
            - /usr/local/bin/get-resource.sh
          envFrom:
            - configMapRef:
                name: ironic-bmo-configmap
          volumeMounts:
            - mountPath: /shared
              name: ironic-data-volume
      volumes:
        - name: ironic-data-volume
          emptyDir: {}
      serviceAccount: metal-provisioner
      serviceAccountName: metal-provisioner
---
apiVersion: v1
kind: Service
metadata:
  name: ironic
  namespace: metal-provisioner
spec:
  type: ClusterIP
  selector:
    name: capm3-ironic
  ports:
    - name: inspector
      port: 5050
      protocol: TCP
      targetPort: 5050
    - name: api
      port: 6385
      protocol: TCP
      targetPort: 6385
    - name: httpd
      port: 80
      protocol: TCP
      targetPort: 6180
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: ironic-http
  namespace: metal-provisioner
spec:
  host: ironic-http-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  to:
    kind: Service
    name: ironic
    weight: 100
  port:
    targetPort: httpd
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: ironic-api
  namespace: metal-provisioner
spec:
  host: ironic-api-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  to:
    kind: Service
    name: ironic
    weight: 100
  port:
    targetPort: api
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: ironic-inspector
  namespace: metal-provisioner
spec:
  host: ironic-inspector-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  to:
    kind: Service
    name: ironic
    weight: 100
  port:
    targetPort: inspector
  wildcardPolicy: None
---
kind: Secret
apiVersion: v1
metadata:
  name: mariadb-password
  namespace: metal-provisioner
data:
  password: Y2hhbmdlbWU=
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: ironic-auth-config
  namespace: metal-provisioner
data:
  auth-config: W2lyb25pY10KYXV0aF90eXBlPWh0dHBfYmFzaWMKdXNlcm5hbWU9Ym9iCnBhc3N3b3JkPWJvYg==
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: ironic-inspector-auth-config
  namespace: metal-provisioner
data:
  auth-config: >-
    W2luc3BlY3Rvcl0KYXV0aF90eXBlPWh0dHBfYmFzaWMKdXNlcm5hbWU9Ym9iCnBhc3N3b3JkPWJvYg==
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: ironic-rpc-auth-config
  namespace: metal-provisioner
data:
  auth-config: >-
    W2pzb25fcnBjXQphdXRoX3R5cGU9aHR0cF9iYXNpYwp1c2VybmFtZT1ib2IKcGFzc3dvcmQ9Ym9iCmh0dHBfYmFzaWNfdXNlcm5hbWU9Ym9iCmh0dHBfYmFzaWNfcGFzc3dvcmQ9Ym9i
type: Opaque
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ironic-bmo-configmap
  namespace: metal-provisioner
data:
  IRONIC_FAST_TRACK: 'true'
  DEPLOY_KERNEL_URL: ironic-http-metal-provisioner.apps.hub-adetalhouet.rhtelco.io/images/ironic-python-agent.kernel
  RESTART_CONTAINER_CERTIFICATE_UPDATED: 'false'
  INSPECTOR_REVERSE_PROXY_SETUP: 'false'
  PROVISIONING_INTERFACE: ens5 # this is the interface on the host node - as Ironic is provide hostnetwork privilege, it will look for this interface to get its IP. Make sure it to update as per your environment.
  IRONIC_INSPECTOR_URL: ironic-inspector-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  IRONIC_KERNEL_PARAMS: console=ttyS0
  IRONIC_API_URL: ironic-api-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  DHCP_RANGE: '172.22.0.10,172.22.0.100' # not needed in our case but required by Ironic
  IRONIC_INSPECTOR_VLAN_INTERFACES: all
  IRONIC_ENDPOINT: ironic-api-metal-provisioner.apps.hub-adetalhouet.rhtelco.io/v1/
  DEPLOY_RAMDISK_URL: ironic-http-metal-provisioner.apps.hub-adetalhouet.rhtelco.io/images/ironic-python-agent.initramfs
  IRONIC_HTTP_URL: ironic-http-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  IRONIC_URL_HOST: ironic-http-metal-provisioner.apps.hub-adetalhouet.rhtelco.io
  HTTP_PORT: '6180'
  IRONIC_INSPECTOR_ENDPOINT: ironic-inspector-metal-provisioner.apps.hub-adetalhouet.rhtelco.io/v1/
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ironic-htpasswd
  namespace: metal-provisioner
data:
  HTTP_BASIC_HTPASSWD: 'bob:$2y$05$3.cpdcaJSTH5jbPDA3MjJuxYjmGMEwdv7uHdDCeu7gQnx920i0YOm'
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ironic-inspector-htpasswd
  namespace: metal-provisioner
data:
  HTTP_BASIC_HTPASSWD: 'bob:$2y$05$Z6g5zDHDvlflpBCoUFMvJe.9Hdbu0wUpYftkFfOz1020WBVASnY1S'