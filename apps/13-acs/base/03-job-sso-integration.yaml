apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  name: create-sso-auth-provider
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli:v4.4
          env:
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: sso-secret
                key: client-secret
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: central-htpasswd
                key: password
          - name: ISSUER
            value: REPLACE_ME_HERE
          - name: EXTERNAL_ROUTE
            value: REPLACE_ME_HERE
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              # Wait for central to be ready
              attempt_counter=0
              max_attempts=20
              echo "Waiting for central to be available..."
              until $(curl -k --output /dev/null --silent --head --fail https://central); do
                  if [ ${attempt_counter} -eq ${max_attempts} ];then
                    echo "Max attempts reached"
                    exit 1
                  fi
                  printf '.'
                  attempt_counter=$(($attempt_counter+1))
                  echo "Made attempt $attempt_counter, waiting..."
                  sleep 5
              done
              echo "Configuring SSO Provider"
              echo "Test if SSO Provider already exists"
              response=$(curl -k -u "admin:$PASSWORD" https://central/v1/authProviders?name=OpenShift | python3 -c "import sys, json; print(json.load(sys.stdin)['authProviders'], end = '')")
              if [[ "$response" != "[]" ]] ; then
                echo "OpenShift Provider already exists, exiting"
                exit 0
              fi
              export DATA='{"name":"OpenShift","type":"oidc","uiEndpoint":"'${EXTERNAL_ROUTE}'","enabled":true,"config":{"client_id":"openshift","client_secret":"'${CLIENT_SECRET}'","issuer":"'$ISSUER'","mode":"post"},"validated":true,"extraUiEndpoints":[],"active":true}'
              #echo "Posting data: ${DATA}"
              curl -k -X POST -u "admin:$PASSWORD" -H "Content-Type: application/json" --data $DATA https://central/v1/authProviders
          imagePullPolicy: Always
          name: create-sso-auth-provider
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30