---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: sso-cli-job-sa-role
rules:
  # this is for the 00-presync-create-cert-cm-job
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sso-gitops-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sso-cli-job-sa-role
subjects:
  - kind: ServiceAccount
    name: cli-job-sa
    namespace: openshift-sso
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cli-job-sa
  namespace: openshift-sso
---
apiVersion: batch/v1
kind: Job
metadata:
  name: presync-create-cert-cm-job
  namespace: openshift-sso
spec:
  template:
    spec:
      containers:
        - resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 128Mi
          image: registry.redhat.io/openshift4/ose-cli:v4.4
          command:
            - /bin/bash
            - -c
            - |
              oc get configmap openidcacrt -n openshift-config
              if [[ $? == 1 ]]
              then 
                echo "Create a ConfigMap named openidcrt in the openshift-config project."
                
                # Get name of certs secret.  It can be router-certs or router-certs-default.
                CERT_SECRET=""
                while [[ z$CERT_SECRET == z ]]; do
                  echo "Wait for letencrypt certs to be deployed, sleep 3 seconds"
                  sleep 3
                  CERT_SECRET=$(oc get secrets -n openshift-ingress | grep 'le-certs' | cut -d ' ' -f1)
                done;
                echo "Certificate found - store in $CERT_SECRET"
                tlscert=`oc get secrets/$CERT_SECRET -o jsonpath={.data.'tls\.crt'} -n openshift-ingress | base64 --decode`
                oc create configmap openidcacrt --from-literal ca.crt="$tlscert" -n openshift-config
              fi
          imagePullPolicy: Always
          name: presync-create-cert-cm-job
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30