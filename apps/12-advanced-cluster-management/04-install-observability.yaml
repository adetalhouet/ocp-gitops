---
apiVersion: v1
kind: Namespace
metadata:
  name: open-cluster-management-observability
  labels:
    openshift.io/cluster-monitoring: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: acm-cli-job-sa-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - patch
  - apiGroups:
      - objectbucket.io
    resources:
      - objectbucketclaims
    verbs:
      - get
      - list
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: acm-gitops-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: acm-cli-job-sa-role
subjects:
  - kind: ServiceAccount
    name: cli-job-sa
    namespace: open-cluster-management-observability
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cli-job-sa
  namespace: open-cluster-management-observability
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sync-observability-secret
  namespace: open-cluster-management-observability
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - /bin/bash
            - -c
            - |

              DOCKER_CONFIG_JSON=`oc extract secret/pull-secret -n openshift-config --to=-`

              oc create secret generic multiclusterhub-operator-pull-secret \
                  -n open-cluster-management-observability \
                  --from-literal=.dockerconfigjson="$DOCKER_CONFIG_JSON" \
                  --type=kubernetes.io/dockerconfigjson

              ACCESS_KEY=""
              SECRET_KEY=""
              while [[ z$ACCESS_KEY == z ]]; do
                 echo "Wait for acm-observability bucket to be created, sleep 3 seconds"
                 sleep 3
                 ACCESS_KEY=$(oc get secret acm-observability -n open-cluster-management-observability --template={{.data.AWS_ACCESS_KEY_ID}} | base64 -d)
                 SECRET_KEY=$(oc get secret acm-observability -n open-cluster-management-observability --template={{.data.AWS_SECRET_ACCESS_KEY}} | base64 -d)
              done;

              BUCKET_NAME=$(oc get ObjectBucketClaim acm-observability -n  open-cluster-management-observability --template={{.spec.bucketName}})

              echo "---
              apiVersion: v1
              kind: Secret
              metadata:
                name: thanos-object-storage
                namespace: open-cluster-management-observability
              type: Opaque
              stringData:
                thanos.yaml: |
                  type: s3
                  config:
                    bucket: $BUCKET_NAME
                    endpoint: s3.openshift-storage.svc:443
                    access_key: $ACCESS_KEY
                    secret_key: $SECRET_KEY" | oc create -f -

          imagePullPolicy: IfNotPresent
          name: sync-observability-secret
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30